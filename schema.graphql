scalar JSON

type Query {
  getQuestions(id: Int): [Question]!
  getQuestion(id: Int): Question
  getUser(id: Int!): User
  getAnswers(id: Int!): [Answer]!
}

enum UpvoteType {
  ANSWER
  QUESTION
}

enum UpvoteValue {
  UPVOTE
  DOWNVOTE
}

type Question {
  id: Int!
  by: User!
  title: String!
  body: String!
  tags: JSON
  upvoteCount: Int!
  answers: [Answer]!
}

type Answer {
  id: Int!
  text: String!
  by: User!
  upvoteCount: Int!
  on: Question!
}

input Tags {
  name: String!
}

type User {
  id: Int!
  name: String
  email: String
}

type Mutation {
  addUser(name: String!, email: String): User
  addQuestion(title: String!, body: String!, tags: [Tags!]!): Question
  addAnswer(text: String!, on: Int!): Answer
  upvote(type: UpvoteType, on: Int!, value: UpvoteValue) : Int!
  favoriteAction(on: Int!) : Boolean!
}

